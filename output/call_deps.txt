org.apache.hadoop.yarn.webapp.WebApps$Builder:build(org.apache.hadoop.yarn.webapp.WebApp)->org.apache.hadoop.yarn.webapp.WebApps$Builder:inferHostClass(), depth 1
org.apache.hadoop.yarn.webapp.WebApps$Builder:build(org.apache.hadoop.yarn.webapp.WebApp)->org.slf4j.Logger:debug(java.lang.String,java.lang.Object), depth 1
org.apache.hadoop.yarn.webapp.WebApps$Builder:build(org.apache.hadoop.yarn.webapp.WebApp)->org.slf4j.Logger:info(java.lang.String), depth 1
org.apache.hadoop.yarn.webapp.WebApps$Builder:build(org.apache.hadoop.yarn.webapp.WebApp)->org.slf4j.Logger:info(java.lang.String,java.lang.Object), depth 1
org.apache.hadoop.yarn.webapp.WebApps$Builder:build(org.apache.hadoop.yarn.webapp.WebApp)->org.slf4j.Logger:warn(java.lang.String,java.lang.Object), depth 1
org.apache.hadoop.yarn.webapp.WebApps$Builder:build(org.apache.hadoop.yarn.webapp.WebApp)->org.slf4j.Logger:error(java.lang.String), depth 1
org.apache.hadoop.yarn.webapp.WebApps$Builder:build(org.apache.hadoop.yarn.webapp.WebApp)->org.apache.hadoop.yarn.webapp.util.WebAppUtils:getHttpSchemePrefix(org.apache.hadoop.conf.Configuration), depth 1
org.apache.hadoop.yarn.webapp.WebApps$Builder:build(org.apache.hadoop.yarn.webapp.WebApp)->org.apache.hadoop.conf.Configuration:get(java.lang.String,java.lang.String), depth 1
org.apache.hadoop.yarn.webapp.WebApps$Builder:build(org.apache.hadoop.yarn.webapp.WebApp)->org.apache.hadoop.security.authorize.AccessControlList:<init>(java.lang.String), depth 1
org.apache.hadoop.yarn.webapp.WebApps$Builder:build(org.apache.hadoop.yarn.webapp.WebApp)->org.apache.hadoop.conf.Configuration:getRange(java.lang.String,java.lang.String), depth 1
org.apache.hadoop.yarn.webapp.WebApps$Builder:build(org.apache.hadoop.yarn.webapp.WebApp)->org.apache.hadoop.conf.Configuration:get(java.lang.String), depth 1
org.apache.hadoop.yarn.webapp.WebApps$Builder:build(org.apache.hadoop.yarn.webapp.WebApp)->org.apache.hadoop.conf.Configuration:get(java.lang.String), depth 1
org.apache.hadoop.yarn.webapp.WebApps$Builder:build(org.apache.hadoop.yarn.webapp.WebApp)->org.apache.hadoop.security.UserGroupInformation:isSecurityEnabled(), depth 1
org.apache.hadoop.yarn.webapp.WebApps$Builder:build(org.apache.hadoop.yarn.webapp.WebApp)->org.slf4j.Logger:info(java.lang.String), depth 1
org.apache.hadoop.yarn.webapp.WebApps$Builder:build(org.apache.hadoop.yarn.webapp.WebApp)->org.slf4j.Logger:info(java.lang.String), depth 1
org.apache.hadoop.yarn.webapp.WebApps$Builder:build(org.apache.hadoop.yarn.webapp.WebApp)->org.apache.hadoop.yarn.webapp.util.WebAppUtils:loadSslConfiguration(org.apache.hadoop.http.HttpServer2$Builder,org.apache.hadoop.conf.Configuration), depth 1
org.apache.hadoop.yarn.webapp.WebApps$Builder:build(org.apache.hadoop.yarn.webapp.WebApp)->org.slf4j.Logger:info(java.lang.String), depth 1
org.apache.hadoop.yarn.webapp.WebApps$Builder:build(org.apache.hadoop.yarn.webapp.WebApp)->org.apache.hadoop.http.HttpServer2$Builder:build(), depth 1
org.apache.hadoop.yarn.webapp.WebApps$Builder:build(org.apache.hadoop.yarn.webapp.WebApp)->org.apache.hadoop.http.HttpServer2:addInternalServlet(java.lang.String,java.lang.String,java.lang.Class,java.util.Map), depth 1
org.apache.hadoop.yarn.webapp.WebApps$Builder:build(org.apache.hadoop.yarn.webapp.WebApp)->org.apache.hadoop.http.HttpServer2:addServlet(java.lang.String,java.lang.String,java.lang.Class), depth 1
org.apache.hadoop.yarn.webapp.WebApps$Builder:build(org.apache.hadoop.yarn.webapp.WebApp)->org.apache.hadoop.yarn.webapp.WebApps$Builder:getConfigParameters(java.lang.String), depth 1
org.apache.hadoop.yarn.webapp.WebApps$Builder:build(org.apache.hadoop.yarn.webapp.WebApp)->org.slf4j.Logger:info(java.lang.String,java.lang.Object), depth 1
org.apache.hadoop.yarn.webapp.WebApps$Builder:build(org.apache.hadoop.yarn.webapp.WebApp)->org.apache.hadoop.yarn.webapp.WebApps$Builder:getConfigParameters(java.lang.String), depth 1
org.apache.hadoop.yarn.webapp.WebApps$Builder:build(org.apache.hadoop.yarn.webapp.WebApp)->org.apache.hadoop.yarn.webapp.WebApps$Builder:hasXFSEnabled(), depth 1
org.apache.hadoop.yarn.webapp.WebApps$Builder:build(org.apache.hadoop.yarn.webapp.WebApp)->org.slf4j.Logger:info(java.lang.String), depth 1
org.apache.hadoop.yarn.webapp.WebApps$Builder:build(org.apache.hadoop.yarn.webapp.WebApp)->org.slf4j.Logger:info(java.lang.String), depth 1
org.apache.hadoop.yarn.webapp.WebApps$Builder:hasXFSEnabled()->org.apache.hadoop.conf.Configuration:getBoolean(java.lang.String,boolean), depth 2
org.apache.hadoop.yarn.webapp.WebApps$Builder:getConfigParameters(java.lang.String)->org.apache.hadoop.conf.Configuration:getPropsWithPrefix(java.lang.String), depth 2
org.apache.hadoop.yarn.webapp.WebApps$Builder:getConfigParameters(java.lang.String)->org.apache.hadoop.conf.Configuration:getPropsWithPrefix(java.lang.String), depth 2
org.apache.hadoop.http.HttpServer2:addServlet(java.lang.String,java.lang.String,java.lang.Class)->org.apache.hadoop.http.HttpServer2:addInternalServlet(java.lang.String,java.lang.String,java.lang.Class,boolean), depth 2
org.apache.hadoop.http.HttpServer2:addInternalServlet(java.lang.String,java.lang.String,java.lang.Class,java.util.Map)->org.slf4j.Logger:isDebugEnabled(), depth 2
org.apache.hadoop.http.HttpServer2:addInternalServlet(java.lang.String,java.lang.String,java.lang.Class,java.util.Map)->org.slf4j.Logger:debug(java.lang.String), depth 2
org.apache.hadoop.http.HttpServer2$Builder:build()->org.apache.hadoop.http.HttpServer2:<init>(org.apache.hadoop.http.HttpServer2$Builder,org.apache.hadoop.http.HttpServer2$1), depth 2
org.apache.hadoop.http.HttpServer2$Builder:build()->org.apache.hadoop.conf.Configuration:get(java.lang.String), depth 2
org.apache.hadoop.http.HttpServer2$Builder:build()->org.apache.hadoop.http.HttpServer2:access$200(org.apache.hadoop.http.HttpServer2,org.apache.hadoop.conf.Configuration,java.lang.String,java.lang.String,java.lang.String), depth 2
org.apache.hadoop.http.HttpServer2$Builder:build()->org.apache.hadoop.http.HttpServer2$Builder:loadSSLConfiguration(), depth 2
org.apache.hadoop.http.HttpServer2$Builder:build()->org.apache.hadoop.conf.Configuration:getInt(java.lang.String,int), depth 2
org.apache.hadoop.http.HttpServer2$Builder:build()->org.apache.hadoop.conf.Configuration:getInt(java.lang.String,int), depth 2
org.apache.hadoop.http.HttpServer2$Builder:build()->org.apache.hadoop.conf.Configuration:getInt(java.lang.String,int), depth 2
org.apache.hadoop.http.HttpServer2$Builder:build()->org.apache.hadoop.conf.Configuration:getInt(java.lang.String,int), depth 2
org.apache.hadoop.http.HttpServer2$Builder:build()->org.apache.hadoop.conf.Configuration:getBoolean(java.lang.String,boolean), depth 2
org.apache.hadoop.http.HttpServer2$Builder:build()->org.apache.hadoop.http.HttpServer2$Builder:createHttpChannelConnector(org.eclipse.jetty.server.Server,org.eclipse.jetty.server.HttpConfiguration), depth 2
org.apache.hadoop.http.HttpServer2$Builder:build()->org.apache.hadoop.http.HttpServer2$Builder:createHttpsChannelConnector(org.eclipse.jetty.server.Server,org.eclipse.jetty.server.HttpConfiguration), depth 2
org.apache.hadoop.yarn.webapp.util.WebAppUtils:loadSslConfiguration(org.apache.hadoop.http.HttpServer2$Builder,org.apache.hadoop.conf.Configuration)->org.apache.hadoop.conf.Configuration:addResource(java.lang.String), depth 2
org.apache.hadoop.yarn.webapp.util.WebAppUtils:loadSslConfiguration(org.apache.hadoop.http.HttpServer2$Builder,org.apache.hadoop.conf.Configuration)->org.apache.hadoop.conf.Configuration:addResource(org.apache.hadoop.conf.Configuration), depth 2
org.apache.hadoop.yarn.webapp.util.WebAppUtils:loadSslConfiguration(org.apache.hadoop.http.HttpServer2$Builder,org.apache.hadoop.conf.Configuration)->org.apache.hadoop.yarn.webapp.util.WebAppUtils:getPassword(org.apache.hadoop.conf.Configuration,java.lang.String), depth 2
org.apache.hadoop.yarn.webapp.util.WebAppUtils:loadSslConfiguration(org.apache.hadoop.http.HttpServer2$Builder,org.apache.hadoop.conf.Configuration)->org.apache.hadoop.conf.Configuration:get(java.lang.String), depth 2
org.apache.hadoop.yarn.webapp.util.WebAppUtils:loadSslConfiguration(org.apache.hadoop.http.HttpServer2$Builder,org.apache.hadoop.conf.Configuration)->org.apache.hadoop.yarn.webapp.util.WebAppUtils:getPassword(org.apache.hadoop.conf.Configuration,java.lang.String), depth 2
org.apache.hadoop.yarn.webapp.util.WebAppUtils:loadSslConfiguration(org.apache.hadoop.http.HttpServer2$Builder,org.apache.hadoop.conf.Configuration)->org.apache.hadoop.conf.Configuration:get(java.lang.String,java.lang.String), depth 2
org.apache.hadoop.yarn.webapp.util.WebAppUtils:loadSslConfiguration(org.apache.hadoop.http.HttpServer2$Builder,org.apache.hadoop.conf.Configuration)->org.apache.hadoop.conf.Configuration:get(java.lang.String), depth 2
org.apache.hadoop.yarn.webapp.util.WebAppUtils:loadSslConfiguration(org.apache.hadoop.http.HttpServer2$Builder,org.apache.hadoop.conf.Configuration)->org.apache.hadoop.yarn.webapp.util.WebAppUtils:getPassword(org.apache.hadoop.conf.Configuration,java.lang.String), depth 2
org.apache.hadoop.yarn.webapp.util.WebAppUtils:loadSslConfiguration(org.apache.hadoop.http.HttpServer2$Builder,org.apache.hadoop.conf.Configuration)->org.apache.hadoop.conf.Configuration:get(java.lang.String,java.lang.String), depth 2
org.apache.hadoop.yarn.webapp.util.WebAppUtils:loadSslConfiguration(org.apache.hadoop.http.HttpServer2$Builder,org.apache.hadoop.conf.Configuration)->org.apache.hadoop.conf.Configuration:get(java.lang.String), depth 2
org.apache.hadoop.security.UserGroupInformation:isSecurityEnabled()->org.apache.hadoop.security.UserGroupInformation:isAuthenticationMethodEnabled(org.apache.hadoop.security.UserGroupInformation$AuthenticationMethod), depth 2
org.apache.hadoop.conf.Configuration:get(java.lang.String)->org.apache.hadoop.conf.Configuration:handleDeprecation(org.apache.hadoop.conf.Configuration$DeprecationContext,java.lang.String), depth 2
org.apache.hadoop.conf.Configuration:get(java.lang.String)->org.apache.hadoop.conf.Configuration:getProps(), depth 2
org.apache.hadoop.conf.Configuration:get(java.lang.String)->org.apache.hadoop.conf.Configuration:substituteVars(java.lang.String), depth 2
org.apache.hadoop.conf.Configuration:get(java.lang.String)->org.apache.hadoop.conf.Configuration:handleDeprecation(org.apache.hadoop.conf.Configuration$DeprecationContext,java.lang.String), depth 2
org.apache.hadoop.conf.Configuration:get(java.lang.String)->org.apache.hadoop.conf.Configuration:getProps(), depth 2
org.apache.hadoop.conf.Configuration:get(java.lang.String)->org.apache.hadoop.conf.Configuration:substituteVars(java.lang.String), depth 2
org.apache.hadoop.conf.Configuration:getRange(java.lang.String,java.lang.String)->org.apache.hadoop.conf.Configuration:get(java.lang.String,java.lang.String), depth 2
org.apache.hadoop.security.authorize.AccessControlList:<init>(java.lang.String)->org.apache.hadoop.security.Groups:getUserToGroupsMappingService(org.apache.hadoop.conf.Configuration), depth 2
org.apache.hadoop.security.authorize.AccessControlList:<init>(java.lang.String)->org.apache.hadoop.security.authorize.AccessControlList:buildACL(java.lang.String[]), depth 2
org.apache.hadoop.conf.Configuration:get(java.lang.String,java.lang.String)->org.apache.hadoop.conf.Configuration:handleDeprecation(org.apache.hadoop.conf.Configuration$DeprecationContext,java.lang.String), depth 2
org.apache.hadoop.conf.Configuration:get(java.lang.String,java.lang.String)->org.apache.hadoop.conf.Configuration:getProps(), depth 2
org.apache.hadoop.conf.Configuration:get(java.lang.String,java.lang.String)->org.apache.hadoop.conf.Configuration:substituteVars(java.lang.String), depth 2
org.apache.hadoop.yarn.webapp.util.WebAppUtils:getHttpSchemePrefix(org.apache.hadoop.conf.Configuration)->org.apache.hadoop.yarn.conf.YarnConfiguration:useHttps(org.apache.hadoop.conf.Configuration), depth 2
org.apache.hadoop.yarn.webapp.WebApps$Builder:inferHostClass()->org.slf4j.Logger:warn(java.lang.String,java.lang.Throwable), depth 2
